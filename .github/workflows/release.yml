name: Release to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Extract version from tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            # For manual dispatch, read from pyproject.toml
            VERSION=$(grep "^version = " pyproject.toml | cut -d'"' -f2)
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Verify version matches pyproject.toml
        run: |
          PYPROJECT_VERSION=$(grep "^version = " pyproject.toml | cut -d'"' -f2)
          if [ "${{ steps.get_version.outputs.version }}" != "$PYPROJECT_VERSION" ]; then
            echo "Error: Tag version (${{ steps.get_version.outputs.version }}) doesn't match pyproject.toml ($PYPROJECT_VERSION)"
            exit 1
          fi

      - name: Create virtual environment
        run: |
          uv venv

      - name: Install build dependencies
        run: |
          uv pip install build twine

      - name: Build package
        run: |
          uv run python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_KEY }}

